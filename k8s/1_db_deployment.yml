apiVersion: v1
kind: Namespace
metadata:
  name: k8s-program

---

apiVersion: v1
kind: PersistentVolume # Create PV
metadata:
  name: users-db-volume # Sets PV name
  namespace: k8s-program
  labels:
    type: local # Sets PV's type
    app: users-db-pod
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi # Sets PV's size
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/data/postgresql" # Sets PV's host path

---

apiVersion: v1
kind: PersistentVolumeClaim # Create PVC
metadata:
  name: users-db-volume-claim # Sets PVC's name
  namespace: k8s-program
  labels:
    app: users-db-pod # Defines app to create PVC for
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi # Sets PVC's size

---

apiVersion: v1
kind: Service
metadata:
  name: users-db
  namespace: k8s-program
spec:
  type: LoadBalancer
  selector:
    app: users-db-pod
  ports:
    - protocol: "TCP"
      port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-db
  namespace: k8s-program
spec:
  selector:
    matchLabels:
      app: users-db-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: users-db-pod
        owner: siarheisvila
    spec:
      containers:
        - name: users-db-container
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: admin
            - name: POSTGRES_PASSWORD
              value: admin1234
            - name: POSTGRES_DB
              value: users
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: users-db-volume-claim